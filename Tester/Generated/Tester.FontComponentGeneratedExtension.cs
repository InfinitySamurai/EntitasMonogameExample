//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {

    public partial class Entity {

        public Tester.FontComponent font { get { return (Tester.FontComponent)GetComponent(CoreComponentIds.Font); } }
        public bool hasFont { get { return HasComponent(CoreComponentIds.Font); } }

        public Entity AddFont(Microsoft.Xna.Framework.Graphics.SpriteFont newFont) {
            var component = CreateComponent<Tester.FontComponent>(CoreComponentIds.Font);
            component.font = newFont;
            return AddComponent(CoreComponentIds.Font, component);
        }

        public Entity ReplaceFont(Microsoft.Xna.Framework.Graphics.SpriteFont newFont) {
            var component = CreateComponent<Tester.FontComponent>(CoreComponentIds.Font);
            component.font = newFont;
            ReplaceComponent(CoreComponentIds.Font, component);
            return this;
        }

        public Entity RemoveFont() {
            return RemoveComponent(CoreComponentIds.Font);
        }
    }
}

    public partial class CoreMatcher {

        static IMatcher _matcherFont;

        public static IMatcher Font {
            get {
                if(_matcherFont == null) {
                    var matcher = (Matcher)Matcher.AllOf(CoreComponentIds.Font);
                    matcher.componentNames = CoreComponentIds.componentNames;
                    _matcherFont = matcher;
                }

                return _matcherFont;
            }
        }
    }
